!chance auto adding of save effects not done due to target/executor swap (already a one target limit)
- probably check effects during looping over targets, add boni the to target dict

Item DB: spelling and use in #count (!qb # rope)
- solution 1: synonyms list or main one
- alt should be same or less words rearranged to not require partial matching duplication
Quickbag: count release & message

Random race npc generator

#* Leaf: {"field":"val"} set field
#* {int:<branch>, ...} weighted randomly select branch
#* [<branch>,...] randomly selecy branch
#* {"key":<branch>] branch off more fields
#* {"field":"@ref} reference different branch in db.
#*     if key is not directly found, check weighted randoms for "samekey:value" and select that {eg: "race":{5:{"race":"Human"}} matches race.Human
#*     if value is a list: check all branches with dicts again for {'samekey':'Value'}
#* None: dead end/unspecified option
#* argument "key=Value": select from random list
#*   or from random weighted based on sub key ( think I did at least because key:list already has to handle lists, can't look for sub key
- * gender
- subrace (race flexible, configurable for area)
- * age
    - Make age more numeric and race specific
- * name
- birthplace (linked to subrace/race%)
    - Sword coast/waterdeep/faerun (can overlap area, doesnt matter), outlands, barovia, domains of dread, icewind dale
    - configurable template
# Dice string detection, roll it
# update/override db with svar/uvar
# gvar references in db so {[gvar,gvar,gvar]} as an svar just works
#   prescan for all strings, or do this for all deep searching (references and such) that rely on dict type
# weighted % is cumulative, but how mix { 1 5% 10 +5 }
# overrides: specific over generic (eye color in root is overridden by race/gender specific) due to order (breadth first? or just add new branch in front instead of end
- profession (race% and/or location %)
- physical characteristics  (% for race)
    - hair color
    - eye color
    - skin color
    - size
    - disabilities/specials
- backstory generator
    - player backgrounds/professions + a tragedy + goals/ideals + bonds/religion + flaws
Structure
    - area [default in gvar]
        - races
            - gender% {"gender": percentage}
            - age range {"category":years,..}
            - physical characteristics
            - professions
            - name [references]


Quickbag: count plurals
Quickbag undo undo = redo, mention in message.
Add coins to list

Remove packs
Change packs from rations to ration or keep rations in item list -.-

Remove ballbearings and other weird duplicates

Quickbag: adding plurals can now easily end up with two separate items in bag how to fix? Remove all plurals from the table and fix plural arguments in the same way?


state: finish var rename thing
state: skill bonuses (initiative, perception especially)
state: fields from !state combat (effects, conditions, range), separate default for targeted
state: server variable for defaults ?
