An alias for `!import` to generate the automation for casting a spell with a cc
  ??? spell name to id database?
  - -dc option to the alias to override the default dc of the automation
  - -sb option to the alias to override the default spell attack bonus
  - -cc option to override the cc name
  - a -with <stat> option
  - allow for Feytouched: Spell automatically

`cc` snippet
   - Accept a cc with Fey Touched (Intelligence): or whatever prefix
   - check cc name for casting stat if any to override `-with
 
* Avrae 4.0 fixes
* SOON !play bet, remove from coin pouch instead of bag.
 *  !play collect
-   AND add a footer/help on how to bet and collect real money.
*  bettering single letter custom things (g s p c e) instead of pieces should use the coins.
*  other single letters and typo protection for custom garbage (anything <=2 chars)
- !play baldur's bones https://infernalmachines.obsidianportal.com/wikis/baldurs-bones
* !state gp and coins are also not coinpurse compatible

- `!ic` roleplay xp, not compatibile with "new" !xp. No one is using it so can be removed or upgraded.
Outlands
- !works add it to the workshop
    * write more elaborate help there
    * remove the built in mini help unless like no argument is given
    * automatic coins added
    * add the tool checks now there's room
    * rewrite it to be readable
    * add a -with <stat> option
    - move tools and stats to gvar
!piety split it
!rpxp split it

* !play npc "quotes"  - strip quotes, they're not needed and a common mistake.


metamagic snippets?

* !hp hallowed 6d6
- Rewrite !qb with functions
- Rewrite !chance with functions
* !qb count $ doesn't show thing
* !qb count show bag in parenthesis of found items
* !qb count none found in his. <- remove or replace with in any bag.
* Big bags go over field limit with `!qb` and `!bag open all` split them
- !qb count use !price database instead to avoid 0x 0x 0x  hempen ropes, add weigh and plural in there too
* !wand alias has deprecation warning with cc or at least ariel's wand does
    * add_effect `args` is removed use passive effects dict https://avrae.readthedocs.io/en/latest/aliasing/api.html#aliasing.api.combat.SimpleCombatant.add_effect
    * bladesong
    * twilight
    * gem_flight
    * wcast
    * delete sleep
    - delete monk stuff
x !qb bagSettings error checking (especially weight [0. lbs]) [can't add that to bagSettings with !bag]
* hp got error healing hallowed for +25 outside of initiative
* !price links don't work for mundane items. Should be in the gvars or in the svar/default or find again in the list of mundane items

In v4.1, with the addition of ieffect2 models through the SimpleCombatant.add_effect() method, we've also changed the way this method works slightly.
* BREAKING CHANGE: SimpleCombatant.add_effect() now returns the added SimpleEffect instead of None
* Deprecation: The args arg is now deprecated and will raise a deprecation warning if used. Check the docs on how to use passive_effects and attacks instead.
* Deprecation: Passing negative values to duration to create an indefinite effect is now deprecated. Use None or omit the argument instead

* !sw doesn't check trueDistance and just assumes?
* !sw error with hallowed at -20
* !unit 150kg: TypeError: can't multiply sequence by non-int of type 'float'


Outlands:
* !rpxp gain not working for dahlia, see @hallowed by rose in #Bot-commands2
* fix !tt with missing cvar (testy)
* fix rpxp and add to workshop
   - split in sub commands gain
   - help
* add pitfight to worskhop
    * split in sub commands set
    * help
x add outlandschar to workshop
- check other aliases, see #suggestions
    > Other ones made specifically for this server would be !carousing, !downtime, !gamble, !gatetown, !piety, !planes, !powers, and !rpxp

!play darts
*   make it clear what the aim was
*   make an explicit x1 so it doesn't automatically double in or tripple
*   eye or bull argument should translate to `50` outer to 25
*   Default straight in double out
*   Double out on bullseye
* links to rules for darts, blackjack, killer ones, hoard
    https://docs.google.com/document/d/1JugoNch6eVNTNVVgo05uT0O1Y-ie4s1WKUAAWtg1pQA/edit?usp=sharing
    https://bicyclecards.com/how-to-play/ship-captain-and-crew/
- dragon hoard can roll again if done on 1 or 2
- play darts as npc: use 0 for the bonus and -b

Coinpurse:
- undo
   * restore Coinpurse bag not as bag but to coin purse, but only if it's in the undo
   - store current bag to new undo
   - store original coinpurse to new undo, but only if there was one
- transfer
   * Store original coinpurse state in undox
   * transfer to Coinpurse
       * only keys that match and can go in get_coins: https://avrae.readthedocs.io/en/latest/aliasing/api.html#aliasing.api.character.AliasCoinpurse.get_coins
   * Transfer from Coin pouch: make it a worthless bag so it's deleted
   * transfer from Coinpurse, set to 0,0,0,0 afterwards
   * coinpurse in undo only if it was modified
   - don't clear out coins if partial transfer and not deleted
   * icons in source_desc and target_desc
   [after update]
   - don't show non transfered coins if !bag open none
   - if moving pouch to coinpurse with still items in it, don't move the items and don't delete the pouch if it still has items
- qb
   * if no Coin Pouch found, default add items matching keys in get_coins() to coipurse with modify
      * write purse state to undo only if modified
    * if coin pouch found, still default to pouch
      - complain in a field with an icon and suggest to transfer
   * support multiple pouch indices, default is just first
        * purse added as last
        * format all of them as coins
        * make sure ordered from big to small like g coins
        * icons (in config, default is just coins to coins)
  * Don't allow forced items into coinpurse
  * What to do with -coinpurse? empty but keep
  * check -"Coin Pouch" +cp should add to purse (remove removed bag idx from purses)
     - looks weird in report, like coins were added, when really they were gone
  * showing coins with bag open none: only changes
  * double check all backgrounds go to purse after transfer with no pouch
    * for backgrounds if coinpurse.total is not 0 then don't add any coins
  * Track purse weight
  * update test plan
  * run test plan
   * update real gvar (rename purses->purse_bags
   * deliver!!
- count
  - $ is purse or pouch
- state
   - use it for coins and gp sp cp etc, use coin_str and total

- spiritual weapon -height, but how to remember ? cant be in overlay, player note might mess up map, effect is locked. combat metadata?
- spiritual weapon trueDistance or not

* Strixhaven background equipment: https://www.dndbeyond.com/sources/sacoc/character-options#StrixhavenBackgrounds
- and http://dnd5e.wikidot.com/background:dragon-casualty and other CoS backgrounds?

- Update HB magic item table again: https://docs.google.com/spreadsheets/d/1hGSA9EmvALogeh-HR5XKaUIdX_3OnPrT/edit#gid=1009357369




!DC
* !dc <sight/smell/sound> perception with modifiers
    * change input format to match other commands (like argparse) but need to iterate over arguments so ... preprocess into a dict.
    * !dc <stuff> -distance value or -size size: key value modifier tables with nested dict
    * numeric values take closest bigger? or smaller? or lerp?
    * support dice dc 1d6 if value is string
    *    !dc ... <value> in modifier table (if not matched before) also just use
* !dc <skill> (show all possible modifiers)
* show skill and don't show it as a modifier
* nearest matching on numeric keys for no value syntax (eg "100 ft")
* show if advantage
- !bdc sight small -cover 3/4 doesn't work, probably because 3/4 is seen as a dice roll and converted to whatever before being matched as text

* nearest matching numeric value only in dict (!bdc sight small 100ft should be 120, not 1000)
    * also unit arguments (without value) converted to match with this dict key `!dc smell pungent 100ft`
    * allow key=>value to be dice strings
    * 2d6ft and -amount 2d6, also to allow 20*5ft
* show all unused modifiers
* allow values to be dice strings (-amount 2d6+2 1d100 ft)
* output roll command `!check <skill> -dc <dc> <adv/dis/pass/fail>`
* for unspecified with dict: assume 0 value and specify it, for others specify: no {mod}
* smell data
* Something about units (miles feet) so they can be in the same mod type (for suggestion) but match with nearest and unit or something -distance 100ft
    * add as 100ft in the yaml and convert to some 'base' unit from a multiplier dict (mixed) (remove spaces, then unit postfix
    * add alternative spellings foot ft min minute hr hour
    * arguments also
    * convert back in the output? remember the input unit somehow, for each mod?
* make svar an array, merge all gvars dicts, default is [default]
  - make a raw yaml and a default yaml
  * allow nested check names (identify item or recognize monster) not as a sub command but by structure of the yaml. how to distinguish nested checks from mods though? [by having a skill specified]

- identify poison/poison data [rarity] (https://roll20.net/compendium/dnd5e/Poisons#content) find raw DCs
- identify scroll [level, class]
* identify monster generic [rarity]
    * identify by monster type give skill
- identify item generic  [rarity]

? require exactly one baseline dc. the first "modifier" (better be dict type then? perhaps even call it target or base?),
? allow numeric or dice string bases? (for mods it gets mixed up with distances and such)
- use @references in yaml for knowledge skills
   bill-to: &id001
    given  : Chris
    family : Dumars
  ship-to: *id001

DC identify is a sub command? but have to copy the whole modifiers thing ?
- !dc id[entify] <thing> <modifiers> spell, cast, item, <creature type> will tell you the skill and the dcs
- !dc identify <monster> <mods> should give a hint on multiple outcomes. basics, name, lore, strengths, weaknesses. these are sort of modifiers, but intrusive ones that are auto added ?
    eg !dc identify zombie will say: religion dc 10, but dc 15 for modifier weakness and dc 20 for modifier lore
   intrusive modifiers could be capitalized LORE
   - does this require inverting the modifier/argument loop? and can -arguments then be parsed jit for dict ?
- use semi intrusive modifiers as well to hint if someone didn't specify common modifiers like light in perception and that the default (0) one is used.
    - how to specify? character prefix? check metadata? capitalization naming convention?
- !dc identify <spell>
    - advantage if known? use character spell and class to see if they know it, needs whole spell db to contain a list of classes/subclasses known ... lots data entry
    - for npcs too? hmmm
- True in dc = auto pass (test)
x [makes no sense, the dc is the same] passive with adv/dis
To store: database in gvar has
type of check:
    modifier: <bonus> if integer
    modifier:
        value: bonus
    modifier: adv/dis if string


!stats:
* condition icons from config in !stats combat
* condition icons for effect in !stats
* optional timeout for !stats combat  (-t?)
* !stats -t * selects all combatants
* !state conditions instead of referring to help (for combat as well)
* !state options
* timeout in minutes? (5m/5min) max is 600, but it's fine. don't need hours
* auto timeout scaled to number of targets listed (10 seconds per + 20 seconds?)
* timeout 0 is also off
x !state combat: automatically put groups into separate fields (then not sorted by initiative anymore?) or with headers (might get too big, with fields big groups might be a problem)
* truncate entries for description size (In embeds.0.description: Must be 4096 or fewer in length.)
* Configurable combat state display with hp, owner, cantrip, melee, ranged, spell, condition, effect flags (and all others eventually)
    * default no ranges just conditions and effects, just heart, team, effects

* !play pig
* http://superm.math.hawaii.edu/_pdfs/lessons/sixth_eighth/Greedy_Pig.pdf
* store as a list of roll sums, add [0] on !play pig hold
* allow other dice?
    - at the start?
- Other modes: race to 101, variable rounds.

* !qb transfer <from> <to> [<item>][...]
- !qb count "bag name" count items in the bag instead of the bags
    - needs to reorganize, now flattens items first.
    - display it as such
    - counts the bags as well
    - don't show repeated similar items, needs to reorganize db?
- !qb plurals same as transfer (es)
    - plurals solutions for default plural items (rations)
    - plural solution for items with bracers hempen rope (50 ft)

* !sw aoo uses name, could be quotes, they can be .replace('"','\"')
* !sw uses note to see if it casts, should use the attack. SHould also attack with the attack instead of aoo
- Doesn't seem to always work, maybe because of also using !conjure? or the group it creates?
!sw -m 019 -> confusing Error evaluating expression: unsupported operand type(s) for -: 'int' and 'NoneType'  in     distance=sqrt((op.x-tp.x)2 + (op.y-tp.y)2)*5.0
* !sw -m X move 21ft should be rounded down (limit 22.5)
!sw -m X -i ignore distance
* !sw help sub alias

 https://discord.com/channels/767440562466586655/803296531246612540/912022942756507669

!center <spell/radius> <target> [...]
checks map locations+sizes of targets
gives a position (and height if applicable) where the most targets are hit
TODO: exclude friendlies (automatically all other targets?)
Use the spell table gvar for area of effect/shape radius
make a collection with march

More elaborate help placing the target or determining for a given center location and spell/overlay shape and direction who is in and who is out.
Then make it smart (like center above) and give the most appropriate location where all given targets are hit, but not just for spheres.



!generate npc
    * speech and mannerism tables like https://www.reddit.com/r/BehindTheTables/comments/7fde9p/npc_voices_table/
    * visual accesories like tattoos, jewelry, eyepatches.
    - backstory rough generic categories from profession (farmer, merchant, priest, sage) and related goals/ideals.

Group movement:
*!march -approach a1 [current combatant or group]
*!march -t "group" -t "combatant" -to a1 go up to but outside of a1
*!march -t group -approach a1 -approach a2  <- all in group go to a1 or a2 whatever is closer
*!march -t combatant ... -rect a1:b4 go evenly spread out over a rectangle
*!march -rect a5:b10 scatter  <- place randomly in this area instead of evenly
*!march -t combatant -go 20e15se all move that way(just create the path and add it to the path after the goal or if no goal the start
    * make sure go path is clipped to the map
    * make sure go path is clipped to distance (always apply distance here)
*!march -t combatant ... -line a1:b4 go onto line but distributed evenly over it (sorted by minimum distance for each?)
*!march v[erbose] for the whole embed, default just the command
!march config verbose and -diagonal to set defaults
    - no diagonal default is trueDistance
- 3d:
    * take height into account for blockers
    * take height of movers into account and the same
    * height argument to add it to the thing and goal (-approach a1 -height 20 means approach at height 20, default current height)
        - and to take into account when moving (assume immediate elevation first)
        - plot 3d height path ?
    - !march -go u10s25d15
    - [wip] per target height -t <target>|speed|size|height
        - how does that relate with goal height, since those aren't per target
    - add height to output if changed
    
!march -approach a1::5 <- approach a circle around a rectangle? or a1:5 even? To plot a circle would have to enlarge rectangle and exclude all corners not at ~range
!march -block a1:5 <- circular block
*!march -t combatant -to a1 -ft 30     <- speed added to all combatants with no speed defined yet (None) default afterwards is ? infinite or 30?
* place with size or modify size if specified !march -t bla -a a1 -size l -> !move -t bla|b1|l
    * specify size per target !march -t bla||l -a a1    => !move -t bla|b1|l

default it will output a start, target and distance moved and a `!map -t` command line
`go` will execute, perhaps later `go` will be default and `cmd` or `map` will output the command

Details:
    - filter out command targets where target is current
    - auto apply to note
    - diagonal setting for distances


DONT need context target, then just run `!move` or run multiple time. it's too messy
!march -t bla# wildcard match number
!march -t bla1-5 ? or could it be called that way ?


BLOCK Initiative
- init threshold option
- block member threshold
- keep groups together
- next, tracking who flagged
- if not done, show embed
- if done, multiline i move , i next and end with embed showing group summary
- always next the whole block for dms or have a -f option


New treasure table
https://docs.google.com/spreadsheets/d/1S-8AUtZFoeQEtmKD5owg2kmbIpbBppgOP-X1S-JgQVk/edit#gid=1228159918

A bit like !mitable
* convert to json (done !gvar 1009a4b8-20b8-4892-8e7f-8259233128bf)
- (meh, would get terrible to display as well) nested table for weapons and stuff
    - nested sub rolls
    - list with even chance

!chance auto adding of save effects not done due to target/executor swap (already a one target limit)
- probably check effects during looping over targets, add boni the to target dict



- rspell SRD only (source
- October: new spells in dragon book, add to list(s) for rspell and other aliases

Item DB: spelling and use in #count (!qb # rope)
- solution 1: synonyms list or main one
- alt should be same or less words rearranged to not require partial matching duplication
Quickbag: count release & message

==== Random race npc generator

* Leaf: {"field":"val"} set field
* {int:<branch>, ...} weighted randomly select branch
* [<branch>,...] randomly selecy branch
* {"key":<branch>] branch off more fields
* {"field":"@ref} reference different branch in db.
*     if key is not directly found, check weighted randoms for "samekey:value" and select that {eg: "race":{5:{"race":"Human"}} matches race.Human
*     if value is a list: check all branches with dicts again for {'samekey':'Value'}
* None: dead end/unspecified option
* argument "key=Value": select from random list
*   or from random weighted based on sub key ( think I did at least because key:list already has to handle lists, can't look for sub key
* gender
- subrace (race flexible, configurable for area)
* age
    - Make age more numeric and race specific, be able to refer to rolled values as fields like age.roll and height.value
* name
- physical characteristics  (% for race)
    * eye color
    * hair color (age)
    * skin color (tan, pale)
    * size
    - disabilities/tattoos/specials
- hair color override by age: age: 100 { age:senior, "hair": {80% gray, 20%: None = keep}}
    - same for age and profession except override with real 'none'
- list result for multiple charateristics: roll string in key means roll and generate a number of results
    - '1d4': ['item','item']
    - '1d4': {weighted table} too
    - key starts with + then (also in stack) ? add to field
    - in representation format a list with commas or spaces,how now? commas for characteristics (and for last) but list for menu recipe


- birthplace (linked to subrace/race%)
    - Sword coast/waterdeep/faerun (can overlap area, doesnt matter), outlands, barovia, domains of dread, icewind dale
    - configurable template
    - from should be weighted table with only "plane":"prime, "continent":"fearun",
    - "from" specific over generic so from waterdeep for cities in faerun and from faerun if not specified
* Dice string detection, roll it
- update/override db with svar/uvar  TODO: what is syntax for this?
    - Should be possible to replace svar with gvar and it works
    - Should be possible to have an svar with a gvar {default="gvar",waterdeep={my own stuff}}
- gvar references in db so {[gvar,gvar,gvar]} as an svar just works, but how is updated instead of randomized? gvar+gvar+gvar?

    * relative references, otherwise gvar stuff will be weird
    * .. empty pointers remove the preceding, mostly for relative from current but could do .race..bla technically.
    * references with {field} so race.{race}.gender.{gender}, what to do if field undefined? postpone/error. right search order (should be json top down so)
    * keys that start with @ are not added to the stack (only for referal)
        * refering can be done to these without the extra @ eg { name:'@humannames', '@humannames':[foo,bar]}
- Text representation, replace fields (with bold or italic)
* weighted % is cumulative, but how mix { 1 5% 10 +5 }
    - problem 50% and 50% is duplicate key
# overrides: specific over generic (eye color in root is overridden by race/gender specific) due to order (breadth first? or just add new branch in front instead of end
* profession (race% and/or location %)

- tavern generator : two part name, barkeep (npc generator?)
- inn room rates (4+1d4 rooms, then list of rooms with rate
- menu rates (items drinks and items meals) meals two part 'poached' 'fish'

- backstory generator
    - player backgrounds/professions + a tragedy + goals/ideals + bonds/religion + flaws
- remaining races heights: https://preview.redd.it/51fh9i4c9q721.png?width=1128&format=png&auto=webp&s=e3be83a5ab34fe60ca870f03161b3b3f99866cba



Quickbag: count plurals
Quickbag undo undo = redo, mention in message.
Add coins to list

Remove packs
Change packs from rations to ration or keep rations in item list -.-

Remove ballbearings and other weird duplicates

Quickbag: adding plurals can now easily end up with two separate items in bag how to fix? Remove all plurals from the table and fix plural arguments in the same way?


state: finish var rename thing
state: skill bonuses (initiative, perception especially)
state: fields from !state combat (effects, conditions, range), separate default for targeted
state: server variable for defaults ?
