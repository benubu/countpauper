[done] retrieve inventory
[done] handle command execution exceptions as user facing errors
[done] unit test for dice
[done] unit tests for character
[done] unit tests for items and heavy shield
[done] unit tests for database
[done] execute sql commands with """:key""", dict(key=value) to automatically '' and for safety of JOHNNY'); DROP TABLE (seems to already prevent more than one command)
[done] database transactions and auto commit and use cursor.close() or with connection or something to refactor multi query atomic operations and make them efficient
[done] unit tests for commands (split commands into testable units? or mock context?)
[done] attack
[done] boni
[done] action points (stat) and $turn command
automatic penalty for subsequent per turn and end turn command
automatic tracking for dual wield switch (boolean) and reset per turn
instead of catching RuntimeExceptions and reraising as command exceptions, define GameError and handle that. CommandError = syntax, game error = rules

derived dice stat for attack and defend dice, add dice together with dice bonuses for items (and effects/skills)
initial skills and random skill assignment, two skill each for physical, mental, social

keep character up to date with database without having to store/restore the whole time, even during test? like some sort of db cache and character is just a wrapper?
    - can probably do it with more Descriptors (although very layered) where the real value is straight in the database. Update one property at a time
    - commit at the end of a command, all characters involved.
[done] represent flat bonuses above 1 in Dice
[done] random characters and monsters above level 1
level up command, argument is ability to raise
[done] organize commands in cogs (well, mostly game cog)
Cog specific error handling, https://guide.pycord.dev/popular-topics/error-handling
[done] character worn can be a list for jewelry and multi part armor?
jewelry (wearable item with bonuses)
game commands more tests for user input handling and error reporting
item database with named types (Type+properties)
position in character and database
combat database (is that where to keep position? only allow targetting combat characters ? add channel to combat?)
Add the random item system from the tactics game with the materials and stuff
level bonus and penalty: extra stats and skills and loss of stats and skills, but which ? (just raising/lowering hp is lame)
