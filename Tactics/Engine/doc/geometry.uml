@startuml

interface IRendition {
   Render()
}

class IGeometry {
   + GetDistance(Coordinate) : double
   + GetBoundingBox() : AxisAlignedBoundingBox
   + Intersection(Line) : double
}

class IVolume {
   + Volume() : double
   + Contains(Coordinate) : bool
}

class IMesh {
   + GetTriangle(unsigned) : Tri
   + GetVertex(unsigned) : Vertex
   + operator+=(IMesh)
}

class AxisAlignedBoundingBox
class Mesh
class Quad
class Triangle
IMesh ...|> IRendition
IMesh ...|> IVolume
IVolume ...|> IGeometry
Mesh ...|> IMesh
Quad ...|> IMesh
Triangle ...|> IMesh
AxisAlignedBoundingBox ...|> IVolume
Sphere ...|> IVolume
Plane ...|> IGeometry
Point ...|> IGeometry
Line ...|> IGeometry
Cylinder ...|> IVolume
CompundVolume ...|> IVolume
CompundVolume *--> IVolume
Light ...|> IRendition
Effect ...|> IRendition
@enduml
