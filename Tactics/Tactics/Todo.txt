* Explicit wind
* Atmospheric pressure & temperature per meter, with z to meter
Explicit Atmosphere and Earth commands
* Render map as one mesh with vertex color & normal and separate triangles (don't change). 
* Render triangles as mesh in two passes, opaque and translucent (and not transparent)
* Render density gradient with false color
* Render temperature  with red channel
* Wall command start(xyz) Vector(xyz) Height, width (any 50% overlapping square is stone)
* Return Voxel data to voxels with just material, temperature, density
x Get signal nan to signal 
x Nan density corners
* Grow edges to include corners: up & down, 
Fix flux out of bounds, match coordinates on graph paper (no -1?)
Corners should take a DirectionS, for edge corners and full corners and to know how to extrapolate boundary (or use IsBoundary), also remove early out in FluxBoundary
Stone boundary flux = 0,0,0 (no wind)
Stone boundary density
Reynolds number computation (need distance to surface per grid/direction)
Fix flux boundary extrapolation
Temperature <-> pressure relation (flux)
Gravity -> flux
Explosion command (xyz, force)
Lake x,y,z   z = level, fill from there, water no flux 
River xyz dxyz=speed, fill from there 
Sea level, ?   sinoid flux, variable level or pressure for tide? 
