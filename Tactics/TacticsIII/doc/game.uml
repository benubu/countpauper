@startuml

class StatDescriptor {
   total: int
   description : string
}

class StatDefintition {
  Load(fn)
}

interface Counted
{
   + Cost(stat, unsigned)
   + Available(stat)
   + Reset(at)
   # used: <Counter, unsigned>
}

interface Statted
{
   + Get(stat) : StatDescriptor
   # stats: <Stat, int>
}
Counted o--> "1" Statted

class Creature {
  name: string
}

Creature ...|> Counted
Creature ...|> Statted

class Race {
    name: string
    bonus: <stat, int>
}

class Item {
   name: string
   bonus: <stat, int>
}

class Stat {
    name : string
    description : string
    limit: Range
}
class Counter {
   name: string
   resetAt: enum
   resetToMax: bool
}
Counter o--> "max" Stat

class Condition {
   name: string
   bonus: <stat, int>
}

Creature o--> "6 primary" Stat
Creature *--> "*" Condition

class Dependency {
   table: int[]
   operator: enum
}

class Avatar

Avatar *--> Creature
Avatar --|> Engine.UI.Scenery
StatDescriptor ---- Statted
Statted o--> "<<singleton>>" StatDefintition
Stat *--> "*" Dependency
Dependency o--> Stat

Creature o--> "1" Race
Creature o--> "*" Item
StatDefintition *---> "*" Stat
StatDefintition *--> "* id" Counter

Item ..|> Counter
@enduml
